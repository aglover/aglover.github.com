<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mobile | The Disco Blog]]></title>
  <link href="http://aglover.github.com/blog/categories/mobile/atom.xml" rel="self"/>
  <link href="http://aglover.github.com/"/>
  <updated>2012-12-12T17:31:34-05:00</updated>
  <id>http://aglover.github.com/</id>
  <author>
    <name><![CDATA[Andrew Glover]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Comprehending the mobile development landscape]]></title>
    <link href="http://aglover.github.com/blog/2012/12/02/comprehending-the-mobile-development-landscape/"/>
    <updated>2012-12-02T18:11:00-05:00</updated>
    <id>http://aglover.github.com/blog/2012/12/02/comprehending-the-mobile-development-landscape</id>
    <content type="html"><![CDATA[<p>There's <a href="http://www.forbes.com/sites/parmyolson/2012/12/04/5-eye-opening-stats-that-show-the-world-is-going-mobile/">no shortage</a> of <a href="http://www.forbes.com/sites/connieguglielmo/2012/12/04/mary-meekers-must-read-interent-trends-report-says-android-phone-uptake-bests-apple/">mobile growth</a> statistics, but here's a few specific ones paint an overall picture of mobility:</p>

<ul>
<li><a href="http://www.digitalbuzzblog.com/infographic-2012-mobile-growth-statistics/">Roughly 87% of the worlds population has a mobile device</a></li>
<li>Earlier this year, <a href="http://readwrite.com/2012/07/05/top-trends-of-2012-the-continuing-rapid-growth-of-mobile">Facebook claimed an astounding 488 million</a> mobile <a href="http://thediscoblog.com/blog/2012/11/28/the-essence-of-mobile-app-performance/">monthly active users </a></li>
<li>Android's user base is growing by <a href="http://www.digitalbuzzblog.com/infographic-2012-mobile-growth-statistics/">700,000 subscribers a day</a></li>
</ul>


<p>These three facts clearly point out that mobility is a growing, global phenomenon, and that it's drastically changing how people use the Internet. What's more, from a technology standpoint, mobile is where the growth is!</p>

<p>But the mobile landscape is as varied as it is big. Unlike a few short years ago, when doing mobile work implied J2ME on a Blackberry, mobile development now encompasses <a href="http://www.android.com/">Android</a>, <a href="http://en.wikipedia.org/wiki/IOS">iOS</a>, <a href="http://en.wikipedia.org/wiki/HTML5">HTML5</a>, and even <a href="http://dev.windowsphone.com/en-us">Windows Phone</a>. That's 4 distinct platforms with different development platforms and languages -- and I haven't even mentioned the <a href="http://thediscoblog.com/blog/2012/09/01/cost-and-the-great-mobile-app-debate/">myriad hybrid options</a> available!</p>

<p>The key to understanding the mobile landscape is an appreciation for the various developmental platforms -- their strengths &amp; weaknesses, speed of development, distribution, and, if you are looking at the consumer market, their payout.</p>

<h5>Android</h5>

<p>Android device distribution, as I pointed out earlier, is growing faster than other platforms, and the Android ecosystem has more than one app store: <a href="https://play.google.com/store?hl=en">Google Play</a> and <a href="http://www.amazon.com/mobile-apps/b?ie=UTF8&amp;node=2350149011">Amazon's store</a>, just to name the two most popular ones. And by most accounts, <a href="http://www.engadget.com/2012/06/27/google-play-hits-600000-apps/">Google Play has as many</a> or <a href="http://news.cnet.com/8301-1035_3-57521252-94/can-apples-app-store-maintain-its-lead-over-google-play/">more apps</a> than Apple's App Store (careful with this statistic though, see details below regarding <em>payouts</em>).</p>

<p>The massive adoption of Android, however, has lead to <a href="http://opensignal.com/reports/fragmentation.php">fragmentation</a>, which does present some significant challenges with respect to testing. In fact, the reality for most developers is that it is almost impossible to test an app on all combinations of device-OS version profiles in a cost effective manner (this is a growing service industry, by the way).</p>

<p>On a positive note, Java, the native language of Android apps, is a fairly ubiquitous language -- some estimates <a href="http://en.wikipedia.org/wiki/Java_%28programming_language%29">peg as many as 10 million active developers</a> so there's no shortage of able-bodied Java developers and their associated tools out there.</p>

<p>Thus, with Android, you have a wide audience (both people with Android devices and developers to build apps) and multiple distribution channels. Yet, this large distribution of disparate devices does present some testing challenges; what's more, it can be more difficult to make money on the Android platform compared to iOS, as you'll see next.</p>

<h5>iOS</h5>

<p>iOS, the OS for iPhones and iPads, has a <a href="http://mobile.tutsplus.com/tutorials/iphone/understanding-the-ios-ecosystem/">tight ecosystem</a> and an avid user base, <a href="http://www.androidauthority.com/are-iphone-users-richer-better-educated-than-android-users-105032/">willing to spend money</a>, ultimately translating into <a href="http://www.forbes.com/sites/darcytravlos/2012/08/22/five-reasons-why-google-android-versus-apple-ios-market-share-numbers-dont-matter/">more money for developers</a>. That is, even though there are far more Android devices globally than iOS ones, the iTunes App Store generates more money than Google Play, which means more money for developers of popular apps. In many respects, users of iOS devices are also more willing to pay a fee for an app as opposed to Android ones.</p>

<p>The development ecosystem for iOS has a higher barrier to entry when compared to something like Java or JavaScript. OSX is a requirement and the <a href="http://store.apple.com/us/browse/home/shop_mac/family/macbook_pro">cost alone</a> here can be a barrier for a lot of developers; moreover, Objective-C can present some challenges for the faint of heart (manual memory management!). Yet, the tooling provided by Apple is almost universally lauded by the community at large (much like Microsoft's VisualStudio) -- <a href="https://developer.apple.com/xcode/">XCode</a> is a slick development tool.</p>

<p>While there isn't a lot of device <a href="http://bgr.com/2012/06/12/apple-ios-fragmentation-iphone/">fragmentation on iOS</a>, developers do have to deal with OS fragmentation. That is, there are only a handful of Apple devices but quite a lot of different versions living in the field at any given time due to a lagging factor of user upgrades.</p>

<p>The iOS platform certainly offers a direct path to revenue, provided you can build a stellar app; however, compared to Android, this is a closed community, which has the tendency to rub some portion of developmental community wrong. Given you can quickly embrace Objective-C and afford the requisite software, iOS is almost always the first platform app developers target.</p>

<h5>HTML5</h5>

<p>HTML5 is truly universal and its apps are available on all platforms without any need to port them -- JavaScript is as ubiquitous as Java; what's more, HTML itself has almost no barrier to entry, making HTML5 and JavaScript a force to content with when it comes to finding talented developers and mass distribution. Cost isn't even really part of the HTML5 equation too -- tools and frameworks are free.</p>

<p>Yet, HTML5 apps suffer from a <a href="http://thediscoblog.com/blog/2012/09/07/past-performance-is-no-guarantee-of-future-results/">distribution challenge</a> -- the major app stores do not carry these apps! Thus, in large part, as an HTML5 app developer, you are relying on a user to type in your URL into a browser. I for one, almost never type in a URL on my iPhone (while I will on my iPad). Lastly, <a href="http://thediscoblog.com/blog/2012/09/25/modevtablet-2012-video-mobile-web-realities/">HTML5 is no where near parity with respect to UX</a> compared to native apps (and may <em>never be</em>). This, however, is only a disadvantage if you are building an app that requires a strong UX. There are plenty of great HTML5 apps out there!</p>

<p>HTML5 offers an extremely low developmental barrier to entry and the widest support available -- all smart devices have browsers (note, <a href="http://thediscoblog.com/blog/2012/09/24/a-tale-of-three-browsers/">they aren't all created equal</a>!); however, because there isn't a viable distribution channel, these apps have limited opportunity to make money.</p>

<h5>Windows Phone</h5>

<p>Windows is <a href="http://www.forbes.com/sites/ericsavitz/2012/12/04/microsoft-dec-qtr-surface-sales-below-1m-units-analyst-says/">still unproven</a> but could be an opportunity to get in early -- first movers in Apple's App Store without a doubt made far more money than if they had submitted the same apps today. In this case, you if want a truly native experience you'll build apps on the .NET platform (presumably C#). Windows machines are far cheaper than OSX ones, so there is little financial barrier other than license fees for VisualStudio and a developer fee for the Windows Phone Marketplace.</p>

<p>Indeed, it appears that Microsoft is <a href="http://www.windowsphone.com/en-us/store">modeling their app store</a> and corresponding policies off of Apple's -- thus there is a <a href="http://www.inquisitr.com/423599/windows-phone-8-app-downloads-improve-by-100/">tightly managed distribution channel</a>, presenting an opportunity to reach a wide audience and earn their money. But, at this point, the wide audience has yet to develop.</p>

<h5>That's 4, but there's still more!</h5>

<p>As I alluded to in the beginning of this post, there are 4 <em>primary platforms</em> and myriad hybrid options, such as <a href="http://phonegap.com/">PhoneGap</a> and <a href="http://www.appcelerator.com/">Appcelerator</a>, for example. These hybrid options have various advantages and disadvantages; however, the primary concerns one needs to think through are still speed of development, distribution, and payout.</p>

<p>Before you embark on a mobile development effort, it pays to have the end in mind -- that is, before you code, have tangible answers for app distribution, development effort, and potential payout as these points will help guide you through the mobile landscape.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The essence of mobile app performance]]></title>
    <link href="http://aglover.github.com/blog/2012/11/28/the-essence-of-mobile-app-performance/"/>
    <updated>2012-11-28T16:59:00-05:00</updated>
    <id>http://aglover.github.com/blog/2012/11/28/the-essence-of-mobile-app-performance</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/mine/binoculars.png">Are you pumped that you just published an app? Yep, me too. But guess what? Once you've built, tested, and deployed a mobile app, you'll find yourself concerned with two factors:</p>

<ul>
<li>visibility</li>
<li>engagement</li>
</ul>


<p>The view app stores like <a href="http://www.apple.com/itunes/">iTunes</a> and <a href="https://play.google.com/store?hl=en">Google Play</a> provide for you regarding app usage is fairly blurry. Downloads, the metric you get for free, doesn't really tell you anything about how your app is being used.</p>

<p>While, at this point, there are essentially two platforms (<a href="http://en.wikipedia.org/wiki/IOS">iOS</a> &amp; <a href="http://en.wikipedia.org/wiki/Android_(operating_system">Android</a>)), it's a big big world out there with a <a href="http://www.androidpit.com/mobile-world-congress">ton of different devices</a>! What's more, these devices, whether <a href="http://bgr.com/2012/05/16/android-fragmentation-visualized-opensignalmaps/">Android</a> <em>or <a href="http://bgr.com/2012/06/12/apple-ios-fragmentation-iphone/">iOS</a></em> are fragmented, which means your app will behave in some manner you haven't tested. Plus, the spectrum of varied users almost guarantees they are going to do something with your app that you've never even considered.  In an app world, you can't assume who will use your app!</p>

<p>When's the last time you downloaded an app that has a measly one or two star rating? Me, neither. Once your app is live, you'll want to know what's happening. You'll want to know how your app is behaving and you'll want to know as quickly as possible before a landslide of negative feedback.</p>

<p>Behavior can be ascertained in two ways:</p>

<ul>
<li>logging</li>
<li>events</li>
</ul>


<p>Logging is a no-brainer -- but remember, crash logs are not enough sometimes! While you can get these in some form or another from app stores, oftentimes monitoring error and/or warning logs can bring to light that future crash. On that same note, don't over log either -- the loquacious logger usually ends up being a nuisance by flooding you with too much information. Think <a href="http://en.wikipedia.org/wiki/Signal-to-noise_ratio">signal-to-noise</a> ratio here.</p>

<p>Events are like log messages, but they're more typed -- rather than describing geek-speak information like a JSON parsing warning at line 43, they capture succinct actions like a button click, a picture taken, a video download. The sky's the limit when it comes to what behavior you wish to capture with an event!</p>

<p>Events come in a lot of flavors -- they can have a timer associated with them and, in some respects, they can also be categorized as a session. Either which way you spin it though, events tell you <em>how your app is being used</em>. Combine these tools with dimension data like device information and geo-location and you start to see what's happening with your app in real time -- your view is certainly less cloudy!</p>

<p>Another question: are you giving your app away for free <em>without any monetization strategy</em>?  I didn't think so. You wouldn't have read this far otherwise. <a href="http://www.insidefacebook.com/2009/01/12/application-insights-how-exactly-is-mau-calculated/">Engagement</a> is about understanding the lifetime value of a user. You want some sort of return on your investment (and if it isn't money, then it is certainly engaged eyeballs), otherwise you wasted your time building the app.</p>

<p>When's the last time you downloaded an app, launched it, decided it was terrible and uninstalled it immediately? Yeah, me too (it happened while I was writing this post). I recently spoke with a government agency that disclosed to me that they had over 500,000 downloads of their app. That's great news! Unfortunately, they had no idea if the app was being used. I bet the app I just deleted is happy they had another download too.</p>

<p>What everyone wants to know, in addition to <em>how</em> their app is being used, is <em>whether it is being used at all</em>. Are people engaged in actively using your app or do they <a href="http://www.nuance.com/ucmprod/groups/enterprise/@web-enus/documents/collateral/nc_020218.pdf">abandon</a> it? A telling metric here is <em>active users</em> -- this accurately discloses how often someone uses your app. And if your monetization strategy relies on ads, for example, this metric means everything to you.</p>

<p>Just like with visibility, if you add dimension data like device information, geo-location, and even duration, a fairly vivid picture of user engagement is painted for you. You can ascertain if your app is actually delivering value.</p>

<p>Building, testing, and deploying your app is no easy feat. Congrats on getting that far! But don't forget about what happens after that effort finishes. Putting an app out into the wild without some sort of monitoring is like driving your car from the back seat while sitting backwards. All you see is outdated and you have no view as to where you're headed.  Visibility and engagement. If they don't matter to you now, they will.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MoDevTablet 2012 video: Mobile Web Realities]]></title>
    <link href="http://aglover.github.com/blog/2012/09/25/modevtablet-2012-video-mobile-web-realities/"/>
    <updated>2012-09-25T12:51:00-04:00</updated>
    <id>http://aglover.github.com/blog/2012/09/25/modevtablet-2012-video-mobile-web-realities</id>
    <content type="html"><![CDATA[<p>Recently, I had the distinct pleasure of speaking at <a href="http://modevtablet.com/">MoDevTablet</a> where I gave a presentation entitled "Mobile Web Realities" and the <a href="http://www.meetup.com/modevdc/">good folks who put on the conference</a> recorded it.</p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/rqfJS3F_YYk "></iframe></div></p>

<p></p>


<p>In summary: a year ago, hybrid development frameworks like <a href="http://phonegap.com/">PhoneGap</a> that leverage HTML5 were poised to radically alter mobile app development, but the potential has failed to live up to the promise: Faster/Easier/Cheaper <em>doesn't always mean</em> Better.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A tale of three browsers]]></title>
    <link href="http://aglover.github.com/blog/2012/09/24/a-tale-of-three-browsers/"/>
    <updated>2012-09-24T15:39:00-04:00</updated>
    <id>http://aglover.github.com/blog/2012/09/24/a-tale-of-three-browsers</id>
    <content type="html"><![CDATA[<p>I recently spent time evaluating various mobile browsers' HTML5 compatibility in an effort to understand the state of the mobile web. Along the way, I discovered that the good folks at Facebook, <a href="http://www.zdnet.com/facebooks-mark-zuckerberg-knocks-html5-in-favor-of-native-apps-7000004082/">who happen to have quite a lot of experience with HTML5</a> and <a href="http://gantdaily.com/2012/09/12/facebook-ceo-mark-zuckerberg-promises-better-mobile-strategy/">mobility</a> put together a handy website called <a href="http://www.rng.io/">Ringmark</a>.</p>

<p>As the Facebook development team puts it, Ringmark</p>

<p><blockquote><p>helps you understand which mobile browsers support the functionality your app needs.</p><footer><strong>Facebook HTML5 Blog</strong> <cite><a href='http://developers.facebook.com/html5/blog/post/2012/02/27/announcing-ringmark--a-mobile-browser-test-suite/'>developers.facebook.com/html5/&hellip;</a></cite></footer></blockquote></p>

<p>Thus, with Ringmark you can ascertain a particular browser's compatibility with HTML5 by simply going to <a href="http://www.rng.io/">rng.io</a>.</p>

<p>Needless to say, I had some fun comparing Mobile Safari on my iPad to my Android 2.3.2 device. Interestingly enough, the fun really started when I decided to see what the feature functionality gap was between three browsers <em>on my desktop</em>.</p>

<p><img class="center" src="/images/mine/rng_io_3_browsers.png">For the test, I used Chrome, Safari, and Firefox -- all three browsers are up to date as of the writing of this entry as well. The center browser is Chrome, left is Safari and right is Firefox.</p>

<p>As you can see, all 3 browsers score <em>differently</em> -- Chrome scoring best with only 29 failures in Ring 1 and Safari, the worst with over 40 failures. None even made it to Ring 2.</p>

<p>If you think HTML5 poses some compatibility issues for mobile devices, you need to widen your scope: HTML5 support varies across <em>everything</em>. Indeed, the <a href="http://en.wikipedia.org/wiki/Browser_wars">Browser Wars</a> are still being fought. The big difference now is that the wars are on multiple fronts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Past performance is no guarantee of future results]]></title>
    <link href="http://aglover.github.com/blog/2012/09/07/past-performance-is-no-guarantee-of-future-results/"/>
    <updated>2012-09-07T11:25:00-04:00</updated>
    <id>http://aglover.github.com/blog/2012/09/07/past-performance-is-no-guarantee-of-future-results</id>
    <content type="html"><![CDATA[<p>In the early days of the desktop computing, software delivery was a matter of going to a store <em>and buying a box</em>. Subsequently, you then went home and manually inserted install disks into a computer. It was, in retrospect, a real pain in the neck. Accordingly, for most people, the software that was loaded on the PC they bought was basically what they only used for the life of the machine. Adding new software to your home PC was an event.</p>

<p><img class="right" src="/images/mine/4047547668_f46315f196_m.jpg">What's more, finding out what to buy and where to buy it was tedious -- if you were lucky and knew someone really into computers, you'd get the scoop on some super useful software worth the effort to jump in a car, drive to the store, purchase, jump back into your car, get home and install it. A few hours later (assuming the store had the box you were looking for), you'd be up and running.</p>

<p>The Web changed this state of software stagnancy for the typical computer user -- now interesting and useful things could be rapidly done on a computer in an on-demand fashion <em>without</em> the need to go somewhere and pick up a box! Need to look up the definition of a word? No problem, go to <a href="http://dictionary.reference.com/">dictionary.com</a>. Need to write a document and share it with various people? <a href="http://www.google.com/enterprise/apps/business">Google Apps</a> to the rescue! Need to a way to manage your complex sales process? Look no further than <a href="http://www.salesforce.com/">Salesforce.com</a>. In essence, in the last decade, the web has become an <em>effective software delivery channel for consumers</em>. And in the process that channel has virtually wiped out desktop applications. I can't remember the last time I bought a software product box from a store. Can you?</p>

<p>Finding out what to use on the web can be daunting though. We all discover something useful on a daily basis; in many respects, the means for learning about new and useful websites is facilitated via social media, but finding web apps is like wading through a jungle for the average consumer. Google, for the most part, is the web's product catalog, yet, you the consumer are left to determine a particular product's efficacy if someone in your social network hasn't already vouched for it.  Consequently, the breadth of web applications the average consumer uses regularly is probably as narrow as it was before the advent of the web.</p>

<p>It's easy then to look at the rapidly evolving mobile landscape and the ever growing popularity of HTML5 and predict a similar result: native mobile apps will go the route of the web because <em>that's what has happened already</em>. Web apps will destroy native apps just like they destroyed desktop ones! Yet, there is one thing missing in this equation: <em>software delivery via curated app stores</em>. You see, what was absent in the early days of the desktop was an accessible online app store.</p>

<p><img class="left" src="/images/mine/AppStore_icon.png">All major mobile platforms offer app stores: Apple has its <a href="http://www.apple.com/apps">App Store</a>, Google as <a href="https://play.google.com/store">Play</a>, Amazon has its <a href="http://www.amazon.com/mobile-apps/b?ie=UTF8&amp;node=2350149011">Appstore for Android</a>, and the list goes on. These app stores make it extremely easy to distribute software and, what's more, make it straightforward for consumers to find relevant apps. Need an app to calculate tips? No problem, search it out in your app store of device, read the reviews, download the most highly reviewed one, and within minutes you're calculating the appropriate tip before you finish your dinner. That's revolutionary!</p>

<p>This app store trend, by the way, is starting to appear on desktops and the web because of their success on mobile devices. It should come as no surprise that my most recent desktop software purchases were from the <a href="http://www.apple.com/osx/apps/app-store.html">Mac App Store</a>; what's more, you can browse the <a href="https://chrome.google.com/webstore">Chrome web store</a> from your desktop as easily as you can browse the iOS App Store on your iPad.</p>

<p>Thus, software delivery on the mobile platform is, at least for the foreseeable future, firmly established via app stores. And app stores cater to native apps (100% native and/or hybrid) only. The average person will not look for useful apps via their device's browser: that route is still a jungle. And, at this point, there is no viable pure play mobile web app delivery channel.</p>

<p>If you are betting against native apps, you had better consider how consumers find and consume apps. Just because the web made it easier for consumers to use apps (and thus crushed desktop applications in the process) before the mobile revolution, it doesn't necessarily mean native apps on mobile devices will be crushed by web apps <em>again</em>. The software delivery channel is firmly established on mobile devices and until those app stores support icon-ifying URLs, native is the only means for mass consumer discovery.</p>

<p><em>Thanks to <a href="http://www.vectorportal.com/stockvectors">Software Box Vector Blue</a> for the image of a software box.</em></p>
]]></content>
  </entry>
  
</feed>
