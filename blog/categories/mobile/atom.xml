<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mobile | The Disco Blog]]></title>
  <link href="http://aglover.github.com/blog/categories/mobile/atom.xml" rel="self"/>
  <link href="http://aglover.github.com/"/>
  <updated>2013-04-05T22:04:27-04:00</updated>
  <id>http://aglover.github.com/</id>
  <author>
    <name><![CDATA[Andrew Glover]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Crowd think often lacks clarity]]></title>
    <link href="http://aglover.github.com/blog/2013/04/05/crowd-think-often-lacks-clarity/"/>
    <updated>2013-04-05T21:04:00-04:00</updated>
    <id>http://aglover.github.com/blog/2013/04/05/crowd-think-often-lacks-clarity</id>
    <content type="html"><![CDATA[<p><img class="right" src="/images/mine/crowd.jpg">In case you missed it, <a href="http://www.infoq.com/">InfoQ</a> has an <a href="http://www.infoq.com/research/cross-platform-mobile-tools">interesting analysis regarding hybrid mobile app development frameworks</a>. They are profiling 12 tools and soliciting community feedback so as to make a <a href="http://www.thoughtworks.com/insights">ThoughtWorks-like technology radar</a>. If you participate in the voting you are entitled to see the voting distribution.</p>

<p>What's interesting (and not too surprising) about this analysis is that frameworks like <a href="http://phonegap.com/">PhoneGap</a> or <a href="http://jquerymobile.com/">jQuery Mobile</a> (and laughably <a href="http://jqtjs.com/">JQTouch</a>?) are leaning more towards <em>adoption ready</em> when compared to frameworks like <a href="http://www.madewithmarmalade.com/">Marmelade</a>, <a href="http://www.coronalabs.com/">Coronona</a> or <a href="http://www.mosync.com/">MoSync</a>. But this radar lacks some clarifying dimensions -- for example, if you want to produce a mobile website on a lot of different mobile platforms quickly, then PhoneGap is probably the way to go. But if you're looking to create a mobile app, then the choice to use PhoneGap must be treated with extreme caution.</p>

<p>You cannot create a <a href="http://thediscoblog.com/blog/2013/03/04/its-a-question-of-wow/">compelling user experience</a> that works across <a href="http://thediscoblog.com/blog/2012/09/01/cost-and-the-great-mobile-app-debate/">all platforms consistently</a> with this framework right now. And it isn't even the fault of PhoneGap entirely -- it's <a href="http://thediscoblog.com/blog/2013/02/17/circumventing-mobile-ux-expectations/">HTML5</a>. That's why going with something like JQTouch without viewing the big picture of what you are building is laughable.</p>

<p>Frameworks like Marmelade or Corona might be a bit more difficult to get started with (after all, you code in something other than HTML or JavaScript) but they can produce a native app that offers a compelling user experience capable of generating a wow. Remember, native-ness <a href="http://thediscoblog.com/blog/2012/09/24/a-tale-of-three-browsers/">trumps the browser</a> almost always unless your app is a series of screens that don't require the user to interact.</p>

<p>Accordingly, the study lacks some needed dimensions -- mainly, whether or not you are building a mobile app or mobile website. Don't fall into the hype trap and jump into PhoneGap development unless you are sure what you are building is a simple mobile website and your audience isn't expecting something like Flipboard or AngryBirds. Otherwise, you'll find yourself investigating either pure play native development or frameworks that ultimately produce a native app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MoDevEast 2012 panel discussion]]></title>
    <link href="http://aglover.github.com/blog/2013/03/25/modeveast-2012-panel-discussion/"/>
    <updated>2013-03-25T18:34:00-04:00</updated>
    <id>http://aglover.github.com/blog/2013/03/25/modeveast-2012-panel-discussion</id>
    <content type="html"><![CDATA[<p>Last fall, I had the pleasure of moderating a panel discussion at <a href="http://modeveast.com/">MoDevEast</a> entitled "<a href="http://www.youtube.com/watch?v=b7P-wNuHPL0">What Developers Love and Hate about iOS, Android, Windows and HTML5</a>" with five super star mobile app developers.</p>

<p><div class="embed-video-container"><iframe src="http://www.youtube.com/embed/b7P-wNuHPL0 "></iframe></div></p>

<p></p>


<p>The panelists are a diverse set, which made the interaction a lot of fun as each had unique perspectives. Check out what my friends <a href="https://twitter.com/rmm5t">Ryan McGeary</a>, Steve Jernigan, Michael Shapard, <a href="https://twitter.com/andytrice">Andrew Trice</a>, and Chris Kamsler have to say!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The bull's eye on mobility: Mobile for the masses]]></title>
    <link href="http://aglover.github.com/blog/2013/03/06/the-bulls-eye-on-mobility-mobile-for-the-masses/"/>
    <updated>2013-03-06T09:28:00-05:00</updated>
    <id>http://aglover.github.com/blog/2013/03/06/the-bulls-eye-on-mobility-mobile-for-the-masses</id>
    <content type="html"><![CDATA[<p><img class="left" src="/images/mine/mftm_1.jpg">Since joining <a href="http://www.app47.com/">App47</a>, I've been lazer focused on mobility; consquently, I'm pleased to announce that a new mobile development series has debuted on <a href="http://www.ibm.com/developerworks/">IBM developerWorks</a>! The inaugural article,  "<a href="http://www.ibm.com/developerworks/library/j-mobileforthemasses1/">A gentle introduction to Android</a>", begins by exploring the mobile landscape and introduces how to get started with Android app development.</p>

<p>As the article summary states:</p>

<p><blockquote><p>The mobile landscape is rich with promise, and Android is a viable and exciting platform for developers who seek a way in. This new series starts with an introduction to Android that is tailored specifically for Java developers just getting started with mobile. Learn about Android's three-layer versioning system (and find out why it matters), then set up your development environment and build your first Android app.</p><footer><strong>IBM DeveloperWorks</strong> <cite><a href='http://www.ibm.com/developerworks/library/j-mobileforthemasses1/'>Mobile for the Masses: A Gentle Introduction to Android</a></cite></footer></blockquote></p>

<p>So what are you waiting for? Check out "<a href="http://www.ibm.com/developerworks/library/j-mobileforthemasses1/">Mobile for the masses: A gentle introduction to Android</a>" and learn the ins and outs of Android development! Stay tuned for more articles to come and don't forget to watch for <a href="http://thediscoblog.com/blog/categories/mobile/">mobile focused articles on this blog</a> as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's a question of wow]]></title>
    <link href="http://aglover.github.com/blog/2013/03/04/its-a-question-of-wow/"/>
    <updated>2013-03-04T10:29:00-05:00</updated>
    <id>http://aglover.github.com/blog/2013/03/04/its-a-question-of-wow</id>
    <content type="html"><![CDATA[<p>Let me ask you a question: do you want to build a mobile website or a mobile app? If your answer is mobile website, then <a href="http://www.ebizmba.com/articles/best-html5-websites">HTML5 is good enough</a>. But if your answer is mobile app then you had better <a href="http://www.trademob.com/why-native-apps-remain-unrivalled-by-web-apps-in-user-experience-and-discoverability/">think about user experience</a>. You see, the user experience bar has been set extraordinarily high by a number of stellar native apps. People expect to be wowed and if they aren't, they won't use your app. It's that simple.</p>

<p><img class="right" src="/images/mine/wow.png">How do you wow someone? You make your app easy to use and aesthetically pleasing to the eye. And it has to work correctly consistently. Unresponsiveness, however minor, won't do.</p>

<p>Can you wow someone <a href="http://thediscoblog.com/blog/2013/02/17/circumventing-mobile-ux-expectations/">with an HTML5 mobile app</a>? <a href="http://thediscoblog.com/blog/2012/09/24/a-tale-of-three-browsers/">Sometimes</a>. But let me tell you: <a href="http://thediscoblog.com/blog/2012/09/25/modevtablet-2012-video-mobile-web-realities/">it's not easy</a>. Don't think for a second that just because there are a gazillion developers who have an <a href="http://thediscoblog.com/blog/2012/09/01/cost-and-the-great-mobile-app-debate/">understanding of HTML and JavaScript</a>, that anyone can build an app to inspire a wow. No, it's a <a href="http://thediscoblog.com/blog/2012/09/07/past-performance-is-no-guarantee-of-future-results/">tricky business with HTML5</a> these days.</p>

<p>Yep, there are fewer developers out there that actually can code <a href="http://en.wikipedia.org/wiki/Objective-C">Objective-C</a> or truly understand <a href="http://developer.android.com/index.html">Android</a>. They might be costly too. But the wow comes from native apps these days and it looks to be that way for some time. Native apps are close to the bone -- they don't have to rely on browser standards or <a href="https://code.google.com/p/html5shiv/">shivs</a> to <a href="http://paulirish.com/2011/the-history-of-the-html5-shiv/">work correctly</a> 83% of the time.  Coded correctly, they work <em>all the time</em>. They are responsive, fast, and can work offline without a lot of magic.</p>

<p><a href="http://en.wikipedia.org/wiki/HTML5">HTML5</a> is great for mobile web sites. Not mobile apps. Until HTML5 can produce a significant wow factor, your best bet is to go native. It's that simple.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Circumventing mobile UX expectations]]></title>
    <link href="http://aglover.github.com/blog/2013/02/17/circumventing-mobile-ux-expectations/"/>
    <updated>2013-02-17T12:10:00-05:00</updated>
    <id>http://aglover.github.com/blog/2013/02/17/circumventing-mobile-ux-expectations</id>
    <content type="html"><![CDATA[<p>Recently, a <a href="https://twitter.com/trianglechoke">buddy of mine</a> pointed me to an interesting tweet:</p>

<p><blockquote><p>New tool converts your Apple #iOS apps to #HTML5 http://dld.bz/cejxz  #appdev</p><footer><strong>@effectiveui</strong> <cite><a href='https://twitter.com/effectiveui/status/299626694149537792'>twitter.com/effectiveui/status/&hellip;</a></cite></footer></blockquote></p>

<p>The article about this new tool, dubbed the "<a href="http://software.intel.com/en-us/articles/technical-reference-intel-html5-app-porter-tool-beta">Intel HTML5 App Porter Tool</a>" suggests that because iOS apps are limited to one platform, HTML5:</p>

<p><blockquote><p>represents an opportunity because it’s supported across a wide range of different devices and operating systems, so it enables the same code base to be reused across different app deployments.</p><footer><strong>Softtalkblog</strong> <cite><a href='http://www.develop-online.net/news/43193/New-tool-converts-your-Apple-apps-to-HTML5'>New Tool Converts Your Apple Apps to HTML5</a></cite></footer></blockquote></p>

<p><img class="right" src="http://www.carinsurance.com/imagesvr_ce/6464/152631.jpg"> While technically this statement is true -- HTML5 <em>is ubiquitous</em> and you do end up with a single code base -- HTML5 is the lowest common app development denominator and thus produces an underwhelming experience when compared to its native brethren.</p>

<p>Taking a native iOS (or Android) app and recasting it into an HTML5 app is like taking your beautiful Ferrari and trading it for a station wagon. The experience will never be quite the same.</p>

<p>Don't get caught up in the HTML5 hype-cycle. It's a great platform for mobile web sites, but if you're building a mobile app, the UX bar has been set quite high. You cannot yet meet that bar with HTML5.</p>
]]></content>
  </entry>
  
</feed>
